spring.application.name=anpetna

server.port=8000

logging.level.org.springframework=info
logging.level.org.mbc=debug

##================== 데이터베이스 필요에 맞게 사용 ===================
#spring.datasource.driver-class-name=org.mariadb.jdbc.Driver
#spring.datasource.url=jdbc:mariadb://192.168.0.160:3306/anpetnadb
#spring.datasource.username=anpetnamall
#spring.datasource.password=anpetna220

#spring.datasource.driver-class-name=org.mariadb.jdbc.Driver
#spring.datasource.url=jdbc:mariadb://localhost:3306/anpetnadb
#spring.datasource.username=anpetnamember
#spring.datasource.password=anpetna220

#spring.datasource.driver-class-name=org.mariadb.jdbc.Driver
#spring.datasource.url=jdbc:mariadb://localhost:3306/anpetnadb
#spring.datasource.username=anpetnaboard
#spring.datasource.password=anpetna220

spring.datasource.driver-class-name=org.mariadb.jdbc.Driver
spring.datasource.url=jdbc:mariadb://localhost:3306/anpetnamall
spring.datasource.username=anpetnamall
spring.datasource.password=anpetnamall

#spring.jpa.hibernate.ddl-auto=create
spring.jpa.hibernate.ddl-auto=update
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.show-sql=true
spring.jpa.database-platform=org.hibernate.dialect.MySQL8Dialect


## =============== 스프링 시큐리티 부분 추가 설정 ====================
logging.level.org.springframework.security=trace
jwt.access-secret=this-is-a-very-long-access-secret-key-at-least-32-bytes!! 
jwt.refresh-secret=this-is-a-very-long-refresh-secret-key-at-least-32-bytes!!

# 세션 저장소를 메모리로 변경 (StandardManager 비활성화)
# 임시 세션만 필요하고 서버 재시작 후에도 세션을 유지할 필요가 없을 때
server.servlet.session.persistent=false


## ====================== 멀티파트 설정 ============================
# 파일 저장/URL 설정
app.upload.dir=C:/upload
app.upload.url-base=/files
# app.upload.dir=/ubuntu/uploads # 리눅스용

# 파일업로드용 서블릿 동작 활성화
spring.servlet.multipart.enabled=true
spring.servlet.multipart.max-file-size=50MB
spring.servlet.multipart.max-request-size=200MB
# (선택) 업로드 임시 디렉토리
# spring.servlet.multipart.location=C:/upload/tmp

## 파일저장위치 지정 (리눅스에 배포시 변경필수)
## spring.servlet.multipart.location=c:\\upload
## 현재 프로젝트나 사용자 홈 디렉토리와는 상관없이 시스템 루트 기준
## spring.servlet.multipart.location=//mbc//upload

## 애플리케이션에서 사용하는 실제 경로
# itemImgLocation: C:/upload
# Java 코드에서 아이템 이미지 저장/조회용으로 참조하는 경로.


## ===================== 카카오 로그인 설정 ==========================

##spring.security.oauth2.client.provider.kakao.authorization-uri=https://kauth.kakao.com/oauth/authorize
##spring.security.oauth2.client.provider.kakao.user-name-attribute=id
##spring.security.oauth2.client.provider.kakao.token-uri=https://kauth.kakao.com/oauth/token
##spring.security.oauth2.client.provider.kakao.user-info-uri=https://kapi.kakao.com/v2/user/me

##spring.security.oauth2.client.registration.kakao.client-name=kakao
##spring.security.oauth2.client.registration.kakao.authorization-grant-type=authorization_code
##spring.security.oauth2.client.registration.kakao.redirect_uri=http://192.168.0.000:8000/login/oauth2/code/kakao

## 카카오api -> REST API키
##spring.security.oauth2.client.registration.kakao.client-id=
## 카카오api -> 시크릿키
##spring.security.oauth2.client.registration.kakao.client-secret=

##spring.security.oauth2.client.registration.kakao.client-authentication-method=client_secret_post
##spring.security.oauth2.client.registration.kakao.scope=profile_nickname,account_email


# ======================= 과거 키 호환(선택) ======================
##com.anpetna.upload.path=${app.upload.dir}
##itemImgLocation=${app.upload.dir}


##==========================파일 업로드 관련 개념=======================
# spring.servlet.multipart.location → 스프링 내부 처리용 임시 경로
# 스프링이 MultipartFile을 처리할 때 기본으로 쓰는 디렉토리.
# 지정하지 않으면 OS temp 폴더 사용. 업로드 후 코드에서 직접 파일 옮겨야 함.

# app.upload.dir → 애플리케이션 비즈니스 로직에서 실제 파일 저장용 경로
# 프로젝트에서 직접 정의한 경로. 코드나 서비스에서 파일 저장/조회 시 참조.
# 예: Files.copy(file.getInputStream(), Paths.get(appUploadDir, fileName))

# 업로드 과정
# 사용자가 파일 업로드 → Spring이 multipart.location에 임시 저장
# 서비스 로직에서 app.upload.dir로 이동 후 DB에 경로 기록